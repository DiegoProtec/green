# DOCKER
quarkus.container-image.builder=docker
quarkus.container-image.build=true
quarkus.container-image.push=false
quarkus.container-image.registry=ghcr.io
quarkus.container-image.group=diegoprotec
quarkus.container-image.name=green
quarkus.container-image.tag=${IMAGE_TAG:${quarkus.application.version}}
#---

# ------------------------------------ KUBERNETES
## namespace
quarkus.kubernetes.namespace=contecin

### labels
quarkus.kubernetes.labels."helm\.sh\/chart"=${quarkus.application.name}-${quarkus.application.version}
quarkus.kubernetes.name=${quarkus.application.name}
quarkus.kubernetes.part-of=${quarkus.kubernetes.namespace}
quarkus.kubernetes.version=${quarkus.application.version}

#--- !!!IMPORTANTE!!! evita que tente recriar o mesmo objeto, mantem a idempotencia do objeto
quarkus.kubernetes.add-version-to-label-selectors=false

## deployment
quarkus.kubernetes.replicas=1
quarkus.kubernetes.strategy=${STRATEGY:none}
quarkus.kubernetes.image-pull-policy=${IMAGE_POLICY:Always}

## service
quarkus.kubernetes.service-type=cluster-ip

# ------------------------------------ HELM
quarkus.helm.type=application
quarkus.helm.version=${IMAGE_TAG:${quarkus.application.version}}
quarkus.helm.app-version=${quarkus.application.version}

quarkus.helm.repository.deployment-target=kind
quarkus.helm.api-version=v2
quarkus.helm.repository.push=true
quarkus.helm.repository.type=CHARTMUSEUM
quarkus.helm.repository.url=http://localhost:8090/api/charts

#--- !!!IMPORTANTE!!! para assinatura de values com caracteres especias
quarkus.helm.disable-naming-validation=true
#--- !!!IMPORTANTE!!! desabilita a passagem automatica de envs para o container
quarkus.helm.map-system-properties=false

# ------------------------------------ APP
## values
quarkus.helm.values."app.replicas".value-as-int=${quarkus.kubernetes.replicas:1}
quarkus.helm.values."app.strategy.type".value=${quarkus.kubernetes.strategy}
quarkus.helm.values."app.imagePolicy".value=${quarkus.kubernetes.image-pull-policy}

### ENVS
#quarkus.helm.values."app.envs.".value=foo

## expressions
quarkus.helm.expressions."replicas".expression={{ include "replicas" . }}
quarkus.helm.expressions."replicas".path=spec.replicas

quarkus.helm.expressions."imagePolicy".expression={{ .Values.app.imagePolicy }}
quarkus.helm.expressions."imagePolicy".path=spec.template.spec.containers.imagePullPolicy

# ------------------------------------ APP.SERVICE
## values
quarkus.helm.values."app.service.type".value=${quarkus.kubernetes.service-type}
quarkus.helm.values."app.service.ports.name".value=http
quarkus.helm.values."app.service.ports.number".value-as-int=80
quarkus.helm.values."app.service.ports.target".value-as-int=8080

# expressions
quarkus.helm.expressions."service.port.name".expression={{ .Values.app.service.ports.name }}
quarkus.helm.expressions."service.port.name".path=(kind == Service).spec.ports.name

quarkus.helm.expressions."service.port.number".expression={{ .Values.app.service.ports.number }}
quarkus.helm.expressions."service.port.number".path=(kind == Service).spec.ports.port

quarkus.helm.expressions."service.port.target".expression={{ .Values.app.service.ports.target }}
quarkus.helm.expressions."service.port.target".path=(kind == Service).spec.ports.targetPort