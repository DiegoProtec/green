# DOCKER
quarkus.container-image.builder=docker
quarkus.container-image.build=false
quarkus.container-image.push=false
quarkus.container-image.registry=ghcr.io
quarkus.container-image.group=diegoprotec
quarkus.container-image.name=green
quarkus.container-image.tag=${IMAGE_TAG}
#---

# ------------------------------------ KUBERNETES
## namespace
quarkus.kubernetes.namespace=contecin
quarkus.kubernetes.part-of=${quarkus.kubernetes.namespace}

## deployment
quarkus.kubernetes.replicas=1

## service
quarkus.kubernetes.service-type=ClusterIp

# ------------------------------------ HELM
quarkus.helm.type=application
quarkus.helm.version=${IMAGE_TAG}
quarkus.helm.app-version=${quarkus.application.version}

quarkus.helm.repository.deployment-target=kind
quarkus.helm.api-version=v2
quarkus.helm.repository.push=true
quarkus.helm.repository.type=CHARTMUSEUM
quarkus.helm.repository.url=http://localhost:8090/api/charts

#--- !!!IMPORTANTE!!! para assinatura de values com caracteres especias
quarkus.helm.disable-naming-validation=true
#---
#--- !!!IMPORTANTE!!! desabilita a passagem automatica de envs para o container
quarkus.helm.map-system-properties=false
#---

# ------------------------------------ APP
## values
quarkus.helm.values."app.name".value=${quarkus.application.name:green}
quarkus.helm.values."app.version".value=${quarkus.helm.app-version:${quarkus.application.version}}
quarkus.helm.values."app.partOf".value=${quarkus.kubernetes.part-of:contecin}
quarkus.helm.values."app.replicas".value-as-int=${quarkus.kubernetes.replicas:1}

## expressions
quarkus.helm.expressions."replicas".expression={{ .Values.app.replicas }}
quarkus.helm.expressions."replicas".path=spec.replicas

quarkus.helm.expressions."labels".expression={{ include "labels" . | nindent 4 }}
quarkus.helm.expressions."labels".path=metadata.labels

quarkus.helm.expressions."matchLabels".expression={{ include "selectorLabels" . | nindent 6 }}
quarkus.helm.expressions."matchLabels".path=spec.selector.matchLabels

quarkus.helm.expressions."selectorLabels".expression={{ include "selectorLabels" . | nindent 8 }}
quarkus.helm.expressions."selectorLabels".path=spec.template.metadata.labels

# ------------------------------------ APP.SERVICE
## values
quarkus.helm.values."app.service.type".value=${quarkus.kubernetes.service-type}
quarkus.helm.values."app.service.ports.name".value=http
quarkus.helm.values."app.service.ports.number".value-as-int=80
quarkus.helm.values."app.service.ports.target".value-as-int=8080

# expressions
quarkus.helm.expressions."service.labels".expression={{ include "labels" . | nindent 4 }}
quarkus.helm.expressions."service.labels".path=(kind == Service).metadata.labels

quarkus.helm.expressions."service.selectorLabels".expression={{ include "selectorLabels" . | nindent 4 }}
quarkus.helm.expressions."service.selectorLabels".path=spec.selector

quarkus.helm.expressions."service.port.name".expression={{ .Values.app.service.ports.name }}
quarkus.helm.expressions."service.port.name".path=(kind == Service).spec.ports.name

quarkus.helm.expressions."service.port.number".expression={{ .Values.app.service.ports.number }}
quarkus.helm.expressions."service.port.number".path=(kind == Service).spec.ports.port

quarkus.helm.expressions."service.port.target".expression={{ .Values.app.service.ports.target }}
quarkus.helm.expressions."service.port.target".path=(kind == Service).spec.ports.targetPort